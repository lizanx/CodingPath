@page "/"
@inject IMediator Mediator
@inject NavigationManager NavManager

<PageTitle>Blazing Trails</PageTitle>

@if (_trails == null)
{
    <p>Loading trails...</p>
}
else
{
    <TrailDetails Trail="_selectedTrail" />
    <TrailSearch />

    @if (_trails.Any())
    {
        <AuthorizeView>
            <Authorized>
                @{
                    Console.WriteLine("##### [HomePage]: Owner = {0}, IsAdmin = {1}",
                        context.User.Identity?.Name ?? "None", context.User.IsInRole("Administrator"));
                }
                <div class="mb-4">
                    <p class="font-italic text-center">
                        Do you have an awesome trail you'd like to shared? <a href="add-trail">Add it here</a>.
                    </p>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="mb-4">
                    <p class="font-italic text-center">
                        Do you have an awesome trail you'd like to shared? Please <a href="authentication/login">log in or sign up</a>.
                    </p>
                </div>                
            </NotAuthorized>
        </AuthorizeView>

        <ViewSwitcher Items="_trails" Context="trail">
            <GridTemplate>
                <TrailCard Trail="trail" OnSelected="HandleTrailSelected"/>
            </GridTemplate>

            <HeaderTemplate>
                <th>Name</th>
                <th>Location</th>
                <th>Length</th>
                <th>Time</th>
                <th></th>
            </HeaderTemplate>

            <RowTemplate>
                <th scope="col">@trail.Name</th>
                <td>@trail.Location</td>
                <td>@(trail.Length)km</td>
                <td>@trail.TimeFormatted</td>
                <td class="text-right">
                    <AuthorizeView>
                        @if (trail.Owner.Equals(context.User.Identity?.Name, StringComparison.OrdinalIgnoreCase) ||
                            context.User.IsInRole("Administrator"))
                        {
                            <button @onclick="@(() => NavManager.NavigateTo($"/edit-trail/{trail.Id}"))" title="Edit"
                                class="btn btn-outline-secondary">
                                <i class="bi bi-pencil"></i>
                            </button>
                        }
                    </AuthorizeView>
                    <button @onclick="@(() => HandleTrailSelected(trail))" title="View" class="btn btn-primary">
                        <i class="bi bi-binoculars"></i>
                    </button>
                    <FavoriteButton Trail="trail" />
                </td>
            </RowTemplate>
        </ViewSwitcher>
    }
    else
    {
        <NoTrails>
            We currently don't have any trails, <a href="add-trail">Why not add one?</a>
        </NoTrails>
    }
}


@code {
    private IEnumerable<Trail>? _trails;
    private Trail? _selectedTrail;
    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = await Mediator.Send(new GetTrailsRequest());
            _trails = response?.Trails.Select(t => new Trail
                {
                    Id = t.Id,
                    Description = t.Description,
                    Name = t.Name,
                    Image = t.Image ?? string.Empty,
                    Location = t.Location,
                    Length = t.Length,
                    TimeInMinutes = t.TimeInMinutes,
                    Owner = t.Owner,
                    Waypoints = t.Waypoints.Select(wp => new BlazingTrails.ComponentLibrary.Map.LatLong(wp.Latitude, wp.Longitude)).ToList()
                });
        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"There was a problem loading trail data: {ex.Message}");
        }
    }

    private void HandleTrailSelected(Trail trail) =>
        _selectedTrail = trail;
}
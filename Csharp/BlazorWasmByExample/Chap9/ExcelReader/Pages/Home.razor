@page "/"
@using DocumentFormat.OpenXml
@using DocumentFormat.OpenXml.Packaging
@using DocumentFormat.OpenXml.Spreadsheet

<PageTitle>Excel Reader</PageTitle>

<InputFile accept=".xlsx" OnChange="@SelectFile" />

@if (file is not null)
{
    if (errorMessage is null)
    {
        <p>
            <div>
                File Name: @file.Name
            </div>
            <div>
                File Size: @file.Size.ToString("N0") bytes
            </div>
            <div>
                Content Type: @file.ContentType
            </div>
        </p>

        <button type="button" @onclick="ReadFileAsync">Read File</button>

        @if (!loaded)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <p>Rows: @rowCount</p>
        }
    }
    else
    {
        <p><em>@errorMessage</em></p>
    }
}

@code {
    private IBrowserFile? file;
    private string? errorMessage;
    private const int MAX_FILE_SIZE = 50_000;
    private bool loaded;
    private int rowCount;

    private void SelectFile(InputFileChangeEventArgs args)
    {
        file = args.File;
        errorMessage = null;

        if (file.Size > MAX_FILE_SIZE
            || file.ContentType != "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet")
        {
            errorMessage = $"Invalid file: size = {file.Size}, type = {file.ContentType}";
        }
    }

    private async Task ReadFileAsync()
    {
        try
        {
            using var stream = new MemoryStream();
            await file!.OpenReadStream(MAX_FILE_SIZE).CopyToAsync(stream);

            SpreadsheetDocument doc = SpreadsheetDocument.Open(stream, false);
            WorkbookPart wbPart = doc.WorkbookPart!;

            var sheet = wbPart.Workbook
                .Descendants<Sheet>()
                .Where(s => s.Name == "olympic_medals")
                .FirstOrDefault()!;
            
            WorksheetPart wsPart = (WorksheetPart)(wbPart.GetPartById(sheet.Id!));

            SheetData sheetData = wsPart.Worksheet.Elements<SheetData>().First();
            
            rowCount = sheetData.Elements<Row>().Count();
            
            loaded = true;
        }
        catch (Exception e)
        {
            errorMessage = $"Invalid Excel file: {e.Message}";
        }
    }
}

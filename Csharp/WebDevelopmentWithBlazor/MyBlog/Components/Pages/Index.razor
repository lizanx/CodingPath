@page "/"
@using Data.Models
@using Data.Models.Interfaces
@using Markdig
@inject IBlogApi _api

<Virtualize ItemsProvider="LoadPosts" Context="post">
    <article>
        <h2>@post.Title</h2>
        @((MarkupString)Markdig.Markdown.ToHtml(new string(post.Text.Take(100).ToArray()), pipeline))
        <a href="/Post/@post.Id">Read more</a>
    </article>
</Virtualize>

@code {
    public int totalBlogposts { get; set; }
    private MarkdownPipeline pipeline;

    private async ValueTask<ItemsProviderResult<BlogPost>>
    LoadPosts(ItemsProviderRequest request)
    {
        if (totalBlogposts == 0)
        {
            totalBlogposts = await _api.GetBlogPostCountAsync();
        }
        var numOfPosts = Math.Min(request.Count, totalBlogposts - request.StartIndex);
        var blogPosts = await _api.GetBlogPostsAsync(numOfPosts, request.StartIndex);
        return new ItemsProviderResult<BlogPost>(blogPosts, totalBlogposts);
    }

    protected override Task OnInitializedAsync()
    {
        pipeline = new MarkdownPipelineBuilder().UseEmojiAndSmiley().Build();
        return base.OnInitializedAsync();
    }
}